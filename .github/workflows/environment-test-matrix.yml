name: environment-test

on:
  # push:
  #   tags:
  #     - '*'
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: 'Environment name to use when triggered manually'
        required: false

jobs:
  prepare:
    name: Prepare environment
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set_env.outputs.env_name }}
      env_list: ${{ steps.set_env.outputs.env_list }}
    steps:
      - id: set_env
        name: Determine environment
        run: |
          echo "GITHUB_EVENT_NAME=${GITHUB_EVENT_NAME}"
          ENV_NAME=""
          if [ "${GITHUB_EVENT_NAME}" = "workflow_dispatch" ]; then
            INPUT_ENV="${{ github.event.inputs.environment }}"
            if [ -n "${INPUT_ENV}" ]; then
              ENV_NAME="${INPUT_ENV}"
            else
              ENV_NAME="manual"
            fi
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            ENV_NAME=${TAG%%@*}
          else
            ENV_NAME="unknown"
          fi
          echo "Determined env_name=${ENV_NAME}"
          if [ -z "${ENV_NAME}" ] || [ "${ENV_NAME}" = "unknown" ] || [ "${ENV_NAME}" = "manual" ]; then
            ENV_LIST='["dev","prod"]'
          else
            ENV_LIST='["'"${ENV_NAME}"'" ]'
            # simpler: ENV_LIST='["'${ENV_NAME}'"]'
            ENV_LIST='["'"${ENV_NAME}"'" ]'
          fi
          # normalize to compact JSON (no spaces)
          # 無理やり上書き
          ENV_LIST='["dev","prod"]'
          ENV_LIST=$(echo "${ENV_LIST}" | tr -d ' ')
          echo "env_name=${ENV_NAME}" >> $GITHUB_OUTPUT
          echo "env_list=${ENV_LIST}" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Output build logs
        run: |
          echo "[build] Build job started"
          echo "[build] Running build steps... (no-op)"
          echo "[build] Build job finished"

  delivery:
    name: Delivery
    needs: [prepare, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.prepare.outputs.env_list) }}
    environment: ${{ matrix.environment }}
    steps:
      - name: Output delivery logs
        run: |
          echo "[delivery] Delivery job started for ${{ matrix.environment }}"
          echo "[delivery] Running delivery steps... (log only)"
          echo "[delivery] vars.testdata=${{ vars.testdata || '' }}"
          echo "[delivery] secrets.testkey=${{ secrets.testkey || '' }}"
          echo "[delivery] Delivery job finished"

  deploy:
    name: Deploy
    needs: [delivery, prepare]
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare.outputs.env_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Output deploy logs
        run: |
          echo "[deploy] Deploy job started"
          echo "[deploy] Running deploy steps... (no-op)"
          echo "[deploy] vars.testdata=${{ vars.testdata || '' }}"
          echo "[deploy] secrets.testkey=${{ secrets.testkey || '' }}"
          echo "[deploy] Deploy job finished"
